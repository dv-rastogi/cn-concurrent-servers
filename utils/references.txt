Ref: https://www.hackerearth.com/practice/notes/akshaypai94/socket-programming-using-tcpip/
Ref: https://www.geeksforgeeks.org/socket-programming-cc/
Ref: https://dzone.com/articles/parallel-tcpip-socket-server-with-multi-threading
1. htonl: https://linux.die.net/man/3/htonl
2. inaddr_any: https://stackoverflow.com/questions/16508685/understanding-inaddr-any-for-socket-programming
3. listen vs accept: https://stackoverflow.com/questions/34073871/socket-programming-whats-the-difference-between-listen-and-accept
4. sockaddr vs sockaddr_in: https://stackoverflow.com/questions/18609397/whats-the-difference-between-sockaddr-sockaddr-in-and-sockaddr-in6
5. Reuse sockets: https://stackoverflow.com/questions/15198834/bind-failed-address-already-in-use
6. Handle SIGPIPE: https://stackoverflow.com/questions/108183/how-to-prevent-sigpipes-or-handle-them-properly
7. Send file TCP: https://idiotdeveloper.com/file-transfer-using-tcp-socket-in-c/
8. Send file UDP: https://www.geeksforgeeks.org/c-program-for-file-transfer-using-udp/ 
9. Find top 10 processes: https://www.looklinux.com/how-to-find-top-10-cpu-consuming-process-in-linuxubuntu/
10. Execute shell command: https://stackoverflow.com/questions/43116/how-can-i-run-an-external-program-from-c-and-parse-its-output, https://linux.die.net/man/3/popen
11. Access pids from proc: https://stackoverflow.com/questions/63372288/getting-list-of-pids-from-proc-in-linux, https://man7.org/linux/man-pages/man5/proc.5.html
12. Thread arguments: https://w3.cs.jmu.edu/kirkpams/OpenCSF/Books/csf/html/ThreadArgs.html
13. Sorting in C: https://stackoverflow.com/questions/2138872/swapping-elements-in-an-array-of-structs